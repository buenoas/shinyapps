library(vegan)
library(fossil)
library(iNEXT)

###################################################################
### Shiny app para calcular diversas métricas de biodiversidade ###
###################################################################

# Número de espécies observado (riqueza)
# Número de indivíduos (abundância)
# Índice de diversidade de Shannon
# Índice de diversidade de Simpson
# Índice de equitabilidade de Pielou
# Número de espécies estimado pelo índice de Chao
# Porcentagem do número de espécies estimado que foi observado

# O aplicativo ainda produz um gráfico de barras com o raqueamento de abundância das espécies e um grafico com a curva de suficiência amostral

ui <- fluidPage(
  titlePanel("Calculadora de Biodiversidade"),
  sidebarLayout(
    sidebarPanel(
      textInput(inputId = "abundance", label = "Insira os valores de abundância de cada espécie", value = ""),
      helpText("Os valores de abundância devem ser separados por vírgula")
    ),
    mainPanel(
      h4("Número de espécies observado (riqueza)"),
      verbatimTextOutput(outputId = "richness"),
      h4("Número de indivíduos (abundância)"),
      verbatimTextOutput(outputId = "abundance"),
      h4("Índice de diversidade de Shannon"),
      verbatimTextOutput(outputId = "shannon"),
      h4("Índice de diversidade de Simpson"),
      verbatimTextOutput(outputId = "simpson"),
      h4("Índice de equitabilidade de Pielou"),
      verbatimTextOutput(outputId = "pielou"),
      h4("Número de espécies estimado pelo índice de Chao"),
      verbatimTextOutput(outputId = "chao1"),
      h4("Porcentagem do número de espécies estimado que foi observado"),
      verbatimTextOutput(outputId = "completeness"),
      plotOutput(outputId = "barplot"),
      plotOutput(outputId = "sac")
    )
  )
)

server <- function(input, output) {
  output$richness <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    specnumber(abundance)
  })
  
  output$abundance <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    sum(abundance)
  })
  
  output$shannon <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    diversity(abundance, "shannon")
  })
  
  output$simpson <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    diversity(abundance, "simpson")
  })
  
  output$pielou <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    shannon_index <- diversity(abundance, index = "shannon")
    richness <- specnumber(abundance)
    if (richness > 1) {
      pielow_index <- shannon_index / log(richness)
    } else {
      pielow_index <- "N/A"
    }
    pielow_index
  })
  
  output$chao1 <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    chao1(abundance)
  })
  
  output$completeness <- renderPrint({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    specnumber(abundance) / chao1(abundance) * 100
  })
  
  output$barplot <- renderPlot({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    barplot(sort(abundance, decreasing = TRUE),
            yaxt = "n",
            main = "Raqueamento de abundância das espécies",
            ylab = "Número de indivíduos")
    axis(side = 2, las = 2)
  })
  
  output$sac <- renderPlot({
    abundance <- as.numeric(unlist(strsplit(input$abundance, ",")))
    out <- iNEXT(abundance)
    out_size <- out$iNextEst$size_based
    out_size_obs <- subset(out_size, Method != "Extrapolation")
    plot(out_size_obs$m, out_size_obs$qD,
         yaxt = "n", type = "l", lwd = 3,
         main = "Curva de suficiência amostral",
         xlab = "Número de indivíduos",
         ylab = "Número de espécies")
    axis(side = 2, las = 2)
  })
}

shinyApp(ui = ui, server = server)
